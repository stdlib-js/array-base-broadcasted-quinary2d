{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar broadcastArray = require( '@stdlib/array-base-broadcast-array' );\n\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five broadcasted input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n* var zeros2d = require( '@stdlib/array-base-zeros2d' );\n*\n* function add( x, y, z, w, v ) {\n*     return x + y + z + w + v;\n* }\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = ones2d( shapes[ 2 ] );\n* var w = ones2d( shapes[ 3 ] );\n* var v = ones2d( shapes[ 4 ] );\n* var out = zeros2d( shapes[ 5 ] );\n*\n* bquinary2d( [ x, y, z, w, v, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ]\n*/\nfunction bquinary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dy0;\n\tvar dy1;\n\tvar dz0;\n\tvar dz1;\n\tvar dw0;\n\tvar dw1;\n\tvar du0;\n\tvar du1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar k0;\n\tvar k1;\n\tvar m0;\n\tvar m1;\n\tvar n0;\n\tvar n1;\n\tvar p0;\n\tvar p1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tsh = shapes[ 5 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 1 ];\n\tdy1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 2 ], shapes[ 2 ], sh );\n\tz = o.data;\n\tst = o.strides;\n\tdz0 = st[ 1 ];\n\tdz1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 3 ], shapes[ 3 ], sh );\n\tw = o.data;\n\tst = o.strides;\n\tdw0 = st[ 1 ];\n\tdw1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 4 ], shapes[ 4 ], sh );\n\tu = o.data;\n\tst = o.strides;\n\tdu0 = st[ 1 ];\n\tdu1 = st[ 0 ];\n\n\tv = arrays[ 5 ];\n\n\tj1 = 0;\n\tk1 = 0;\n\tm1 = 0;\n\tn1 = 0;\n\tp1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tk0 = 0;\n\t\tm0 = 0;\n\t\tn0 = 0;\n\t\tp0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ k1 ];\n\t\tz0 = z[ m1 ];\n\t\tw0 = w[ n1 ];\n\t\tu0 = u[ p1 ];\n\t\tv0 = v[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tv0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ], z0[ m0 ], w0[ n0 ], u0[ p0 ] );\n\t\t\tj0 += dx0;\n\t\t\tk0 += dy0;\n\t\t\tm0 += dz0;\n\t\t\tn0 += dw0;\n\t\t\tp0 += du0;\n\t\t}\n\t\tj1 += dx1;\n\t\tk1 += dy1;\n\t\tm1 += dz1;\n\t\tn1 += dw1;\n\t\tp1 += du1;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = bquinary2d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a quinary callback to elements in five broadcasted input arrays and assign results to elements in a two-dimensional nested output array.\n*\n* @module @stdlib/array-base-broadcasted-quinary2d\n*\n* @example\n* var ones2d = require( '@stdlib/array-base-ones2d' );\n* var zeros2d = require( '@stdlib/array-base-zeros2d' );\n* var bquinary2d = require( '@stdlib/array-base-broadcasted-quinary2d' );\n*\n* function add( x, y, z, w, v ) {\n*     return x + y + z + w + v;\n* }\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = ones2d( shapes[ 2 ] );\n* var w = ones2d( shapes[ 3 ] );\n* var v = ones2d( shapes[ 4 ] );\n* var out = zeros2d( shapes[ 5 ] );\n*\n* bquinary2d( [ x, y, z, w, v, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,oCAAqC,EA0CnE,SAASC,EAAYC,EAAQC,EAAQC,EAAM,CAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,GAHAR,EAAKhC,EAAQ,CAAE,EACfY,EAAKoB,EAAI,CAAE,EACXnB,EAAKmB,EAAI,CAAE,EACN,EAAApB,GAAM,GAAKC,GAAM,GAwCtB,IArCAqB,EAAIrC,EAAgBE,EAAQ,CAAE,EAAGC,EAAQ,CAAE,EAAGgC,CAAG,EACjDG,EAAID,EAAE,KACND,EAAKC,EAAE,QACPhC,EAAM+B,EAAI,CAAE,EACZ9B,EAAM8B,EAAI,CAAE,EAEZC,EAAIrC,EAAgBE,EAAQ,CAAE,EAAGC,EAAQ,CAAE,EAAGgC,CAAG,EACjDI,EAAIF,EAAE,KACND,EAAKC,EAAE,QACP9B,EAAM6B,EAAI,CAAE,EACZ5B,EAAM4B,EAAI,CAAE,EAEZC,EAAIrC,EAAgBE,EAAQ,CAAE,EAAGC,EAAQ,CAAE,EAAGgC,CAAG,EACjDK,EAAIH,EAAE,KACND,EAAKC,EAAE,QACP5B,EAAM2B,EAAI,CAAE,EACZ1B,EAAM0B,EAAI,CAAE,EAEZC,EAAIrC,EAAgBE,EAAQ,CAAE,EAAGC,EAAQ,CAAE,EAAGgC,CAAG,EACjDM,EAAIJ,EAAE,KACND,EAAKC,EAAE,QACP1B,EAAMyB,EAAI,CAAE,EACZxB,EAAMwB,EAAI,CAAE,EAEZC,EAAIrC,EAAgBE,EAAQ,CAAE,EAAGC,EAAQ,CAAE,EAAGgC,CAAG,EACjDO,EAAIL,EAAE,KACND,EAAKC,EAAE,QACPxB,EAAMuB,EAAI,CAAE,EACZtB,EAAMsB,EAAI,CAAE,EAEZO,EAAIzC,EAAQ,CAAE,EAEdkB,EAAK,EACLE,EAAK,EACLE,EAAK,EACLE,EAAK,EACLE,EAAK,EACCV,EAAK,EAAGA,EAAKF,EAAIE,IAAO,CAY7B,IAXAC,EAAK,EACLE,EAAK,EACLE,EAAK,EACLE,EAAK,EACLE,EAAK,EACLE,EAAKS,EAAGlB,CAAG,EACXU,EAAKS,EAAGjB,CAAG,EACXS,EAAKS,EAAGhB,CAAG,EACXQ,EAAKS,EAAGf,CAAG,EACXO,EAAKS,EAAGd,CAAG,EACXM,EAAKS,EAAGzB,CAAG,EACLD,EAAK,EAAGA,EAAKF,EAAIE,IACtBiB,EAAIjB,CAAG,EAAIb,EAAKyB,EAAIV,CAAG,EAAGW,EAAIT,CAAG,EAAGU,EAAIR,CAAG,EAAGS,EAAIP,CAAG,EAAGQ,EAAIN,CAAG,CAAE,EACjER,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,EAEPO,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,EACNgB,GAAMd,CACP,CACD,CAKAf,EAAO,QAAUE,ICzHjB,IAAI2C,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "broadcastArray", "bquinary2d", "arrays", "shapes", "fcn", "dx0", "dx1", "dy0", "dy1", "dz0", "dz1", "dw0", "dw1", "du0", "du1", "S0", "S1", "i0", "i1", "j0", "j1", "k0", "k1", "m0", "m1", "n0", "n1", "p0", "p1", "x0", "y0", "z0", "w0", "u0", "v0", "sh", "st", "o", "x", "y", "z", "w", "u", "v", "main"]
}
